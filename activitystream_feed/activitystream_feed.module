<?php
// $Id: activitystream_feed.module,v 1.2.2.8 2009/11/09 22:41:49 akalsey Exp $

/**
 * @file
 * The module for importing feeds. 
 * This is required by lastfm, twitter, digg and delicious.
 */

$path = drupal_get_path('module', 'activitystream_feed') .'/simplepie/simplepie.class.php';

if (module_exists('simplepie')) {
  simplepie_require();
} else {
  if (!class_exists('SimplePie') && file_exists($path)) {
    require_once $path;
  }
}

/**
 * Implementation of hook_requirements().
 */
function activitystream_feed_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();
  switch ($phase) {
    case 'install' :
    case 'runtime' :
      $path = drupal_get_path('module', 'activitystream_feed') .'/simplepie.inc';
      if (!file_exists($path) && !module_exists('simplepie')) {
        $requirements['simplepie'] = array(
          'title' => $t("ActivityStream Feed: SimplePie Parser"),
          'description' => $t("Obtain the !simplepie package and copy simplepie.inc to the activitystream/activitystream_feed directory.",
          array('!simplepie' => l('SimplePie', 'http://simplepie.org/downloads', array(), NULL, NULL, TRUE))),
          'severity' => $phase == 'install' ? REQUIREMENT_WARNING : REQUIREMENT_ERROR,
          'value' => $t('simplepie.inc file missing'),
        );
      }
      elseif ($phase == 'runtime') {
        if (module_exists('simplepie')) {
          $requirements['simplepie'] = array(
            'title' => $t('ActivityStream Feed: SimplePie Core'),
            'description' => t('Activity Stream is using the SimplePie Core module with SimplePie version !version',
            array('!version' => '<strong>'. SIMPLEPIE_VERSION .'</strong>')),
            'severity' => REQUIREMENT_OK,
            'value' => $t('Installed correctly'),
          );
        } else {
          $requirements['simplepie'] = array(
            'title' => $t('ActivityStream Feed: SimplePie Parser'),
            'description' => t('The current installed version of SimplePie is !version',
            array('!version' => '<strong>'. SIMPLEPIE_VERSION .'</strong>')),
            'severity' => REQUIREMENT_OK,
            'value' => $t('Installed correctly'),
          );
        }
      }
  }
  return $requirements;
}

/*
 * The API passes in a $user object that contains four properties:
 * uid, userid, password, feed. These properties contain the account
 * information entered into the user's settings page, along with the 
 * uid of their Drupal account.
 */
function activitystream_feed_streamapi($user) {
  // No feed URL, skip this one
  if (!$user->feed) {
    return;
  }

  $feed = new SimplePie();
  $feed->set_cache_location(file_directory_temp());
  $feed->set_feed_url($user->feed);
  $feed->set_useragent('Drupal Activity Streams');
  $feed->force_feed(TRUE);
  if (!$feed->init()) {
    watchdog('activitystream', '%message', array('%message' => $feed->error .' - '. $user->feed), WATCHDOG_ERROR);
    return;
  }

  $arrfeed = $feed->get_items();
  $items = array();
  if (is_array($arrfeed)) {
    foreach ($arrfeed as $item) {
      $activity['link'] = $item->get_permalink();
      $activity['title'] = html_entity_decode($item->get_title());
      $activity['body'] = $item->get_description();
      $activity['timestamp'] = strtotime(str_replace(',', '', $item->get_date()));
      $activity['guid'] = md5($item->get_permalink());
      $activity['id'] = md5($item->get_id());
      $activity['data'] = serialize(array('favicon' => $feed->get_favicon(), 'feedtitle' => $feed->get_title()));
      $activity['location'] = array('latitude' => $item->get_latitude(), 'longitude' => $item->get_longitude());
      if (module_exists('taxonomy') && variable_get('activitystream_vocabulary', -1) > 0) {
        $categories = $item->get_categories();
        if ($categories) {
          foreach ($categories as $category) {
            $activity['categories'] = explode(' ', $category->term);
          }
        }
      }
      $items[] = $activity;
    }
  }
  
  return $items;
}

/*
 * Implement a user settings form hook. Modules should build a form
 * using an array that mirrors the Drupal form API. activitystream.module
 * will add the form elements to a tab called Activity Streams on the
 * user's Profile Edit page. Fields should be named
 * yourmodulename_fieldname. For instance, to store the user ID for 
 * Flickr, the field name is activitystream_flickr_userid
 *
 * To avoid collisions with other activitystream module's forms
 * use your module's name as the form array's key.
 */
function activitystream_feed_activitystream_settings(&$edit) {
  $form['activitystream_feed'] = array(
      '#type' => 'fieldset',
      '#title' => t('Feed settings'));
  $form['activitystream_feed']['activitystream_feed_feed'] = array(
    '#type' => 'textarea',
    '#title' => t('Feed URL'),
  '#rows' => 15,
    '#default_value' => empty($edit['activitystream_feed_feed']) ? '' : $edit['activitystream_feed_feed'],
    '#description' => t('URL of the feeds to import as an activity stream. Multiple feeds are allowed; place each on a seperate line.'));
  return $form;  
}

function theme_activitystream_feed_icon($params) {
  $params = unserialize($params);
  // Return the favicon if we have it. Otherwise return a default feed icon.
  if ($params['favicon']) {
    return '<img src="'. $params['favicon'] .'" alt="'. $params['feedtitle'] .'" height="16" width="16"/>';    
  } 
  else {
    return theme('image', drupal_get_path('module', 'activitystream_feed') .'/feed-icon-16x16.png', $params['feedtitle'], $params['feedtitle']);
  }
}

function theme_activitystream_feed_item($activity) {
  $node = node_load($activity->nid);
  $date = theme('activitystream_date', $node->created);
  $user = user_load(array('uid' => $node->uid));
  $name = theme('activitystream_username', $user);
  return '<span class="activitystream-item">'. theme('activitystream_feed_icon', $activity->data) ." <span>$name " . t('posted') . " ". l($node->title, $activity->link) ." <span class=\"activitystream-created\">$date</span></span>". l('#', 'node/'. $node->nid, array('class' => 'permalink')) .'</span>'."\n";
}

function activitystream_feed_theme() {
  return array(
    'activitystream_feed_icon' => array(
      'arguments' => array('params' => NULL),
    ),
    'activitystream_feed_item' => array(
      'arguments' => array('activity' => NULL),
    ),
  );
}
